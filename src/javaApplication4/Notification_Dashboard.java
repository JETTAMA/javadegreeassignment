/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package javaApplication4;

/**
 *
 * @author cocon
 */
import classes.*;
import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class Notification_Dashboard extends javax.swing.JFrame {

    /**
     * Creates new form CustomerDashboard
     */
    private Customer customer;
    private User user;
    private Vendor vendor;
    private DeliveryRunner deliveryRunner;
    private FileManager fm;

    public Notification_Dashboard() {
        initComponents();
        this.fm = new FileManager();
        customizeBasedOnUserType();
    }
    public Notification_Dashboard(Customer customer) {
        initComponents();
        this.customer = customer;
        this.fm = new FileManager();
    }
    public Notification_Dashboard(Vendor vendor) {
        initComponents();
        this.vendor =vendor;
        this.fm = new FileManager();
    }
    public Notification_Dashboard(DeliveryRunner deliveryRunner) {
        initComponents();
        this.deliveryRunner =deliveryRunner;
        this.fm = new FileManager();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        notificationsTable = new javax.swing.JTable();
        backButton = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        dateField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        timeField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        messageArea = new javax.swing.JTextArea();
        jLabel7 = new javax.swing.JLabel();
        transactionIdField = new javax.swing.JTextField();
        updateDiningOption = new javax.swing.JLabel();
        dineInButton = new javax.swing.JButton();
        takeawayButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel2.setPreferredSize(new java.awt.Dimension(794, 554));

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Notification Dashboard", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI Semibold", 3, 18), new java.awt.Color(255, 153, 0))); // NOI18N
        jPanel6.setOpaque(false);

        notificationsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Date", "Time", "Message", "TransactionId"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        notificationsTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                notificationsTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(notificationsTable);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 652, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 486, Short.MAX_VALUE)
                .addContainerGap())
        );

        backButton.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        backButton.setForeground(new java.awt.Color(0, 48, 73));
        backButton.setText("Back");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Segoe UI Semibold", 3, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 153, 0));
        jLabel3.setText("Date");
        jLabel3.setToolTipText("");

        dateField.setEditable(false);
        dateField.setBorder(null);
        dateField.setDisabledTextColor(new java.awt.Color(102, 102, 102));
        dateField.setEnabled(false);
        dateField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dateFieldActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI Semibold", 3, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 153, 0));
        jLabel1.setText("Time");
        jLabel1.setToolTipText("");

        timeField.setEditable(false);
        timeField.setBorder(null);
        timeField.setDisabledTextColor(new java.awt.Color(102, 102, 102));
        timeField.setEnabled(false);
        timeField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                timeFieldActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Segoe UI Semibold", 3, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 153, 0));
        jLabel2.setText("Message");
        jLabel2.setToolTipText("");

        messageArea.setEditable(false);
        messageArea.setColumns(20);
        messageArea.setRows(5);
        messageArea.setAutoscrolls(false);
        jScrollPane2.setViewportView(messageArea);

        jLabel7.setFont(new java.awt.Font("Segoe UI Semibold", 3, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 153, 0));
        jLabel7.setText("Transaction ID");
        jLabel7.setToolTipText("");

        transactionIdField.setEditable(false);
        transactionIdField.setBorder(null);
        transactionIdField.setDisabledTextColor(new java.awt.Color(102, 102, 102));
        transactionIdField.setEnabled(false);
        transactionIdField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                transactionIdFieldActionPerformed(evt);
            }
        });

        updateDiningOption.setFont(new java.awt.Font("Segoe UI Semibold", 3, 14)); // NOI18N
        updateDiningOption.setForeground(new java.awt.Color(255, 153, 0));
        updateDiningOption.setText("Update Dining Option:");
        updateDiningOption.setToolTipText("");

        dineInButton.setBackground(new java.awt.Color(255, 153, 0));
        dineInButton.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        dineInButton.setForeground(new java.awt.Color(0, 48, 73));
        dineInButton.setText("DINE_IN");
        dineInButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dineInButtonActionPerformed(evt);
            }
        });

        takeawayButton.setBackground(new java.awt.Color(255, 153, 0));
        takeawayButton.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        takeawayButton.setForeground(new java.awt.Color(0, 48, 73));
        takeawayButton.setText("TAKEAWAY");
        takeawayButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                takeawayButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(updateDiningOption, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(dineInButton, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(takeawayButton, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(transactionIdField, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 31, Short.MAX_VALUE))))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel1)
                                .addComponent(jLabel3)
                                .addComponent(timeField, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(40, 40, 40))
                        .addComponent(dateField, javax.swing.GroupLayout.DEFAULT_SIZE, 277, Short.MAX_VALUE))
                    .addContainerGap()))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(123, 123, 123)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel7)
                .addGap(5, 5, 5)
                .addComponent(transactionIdField, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(updateDiningOption)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dineInButton, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(takeawayButton, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(55, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jLabel3)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(dateField, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jLabel1)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(timeField, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(317, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(92, 92, 92)
                        .addComponent(backButton, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(229, 229, 229))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(backButton, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(35, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 1004, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 588, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened

        if(customer != null){
            notificationsTable.setModel(Controller.populateNotificationTable(customer.getUserId()));
        }
        else if(vendor != null){
            notificationsTable.setModel(Controller.populateNotificationTable(vendor.getUserId()));
        }
        else if(deliveryRunner != null){
           notificationsTable.setModel(Controller.populateNotificationTable(deliveryRunner.getUserId()));
        }
        
        updateDiningOption.setVisible(false);
        dineInButton.setVisible(false);
        takeawayButton.setVisible(false);
    }//GEN-LAST:event_formWindowOpened
    
    private void customizeBasedOnUserType() {
        if (user instanceof Customer) {
            // Customize for Customer
        } else if (user instanceof Vendor) {
            // Customize for Vendor
        } else if (user instanceof DeliveryRunner) {
            // Customize for Delivery Runner
        }
    }

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        // TODO add your handling code here:
        this.dispose();
        if(customer != null){
            new Customer_Dashboard(customer).setVisible(true);
        }
        else if(vendor != null){
            new Vendor_Dashboard(vendor).setVisible(true);
        }
        else if(deliveryRunner != null){
            new DeliveryRunner_Dashboard(deliveryRunner).setVisible(true);
        }
    }//GEN-LAST:event_backButtonActionPerformed

    private void notificationsTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_notificationsTableMouseClicked
        DefaultTableModel model = (DefaultTableModel) notificationsTable.getModel();
        int index = notificationsTable.getSelectedRow();

        String date = (String) model.getValueAt(index, 0);
        String time = (String) model.getValueAt(index, 1);
        String message = (String) model.getValueAt(index, 2);
        String transactionId = (String) model.getValueAt(index, 3);
        if (message.startsWith("Transaction Receipt")){
            
            Transaction transaction = fm.getTransactionByTransactionId(transactionId);
            
            String textBlock = """
        Transaction Receipt

        Transaction ID: """ + transaction.getTransactionId() + """
        
        User ID: """ + transaction.getUserId() + """
        
        Amount: RM """ + transaction.getAmount() + """
        
        Type: """ + transaction.getType() + """
        
        Date: """ + date + """
        
        Time: """ + time + """
        
        Status: """ + transaction.getStatus() + """
        """;
            
        message = textBlock;
        
        }else if (message.startsWith("ACTION NEEDED:")){
            updateDiningOption.setVisible(true);
            dineInButton.setVisible(true);
            takeawayButton.setVisible(true);
                      
        }
        
        dateField.setText(date);
        timeField.setText(time);
        messageArea.setText(message);
        transactionIdField.setText(transactionId);
    }//GEN-LAST:event_notificationsTableMouseClicked

    private void dateFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dateFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dateFieldActionPerformed

    private void timeFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_timeFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_timeFieldActionPerformed

    private void transactionIdFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_transactionIdFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_transactionIdFieldActionPerformed

    private void dineInButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dineInButtonActionPerformed
         // Find the start index of the orderId
        String message = messageArea.getText();
        String[] parts = message.split(" ");

       // Iterate through the parts to find the orderId
       String orderId = null;
       for (String part : parts) {
           if (part.startsWith("order_")) {
               orderId = part;
               break;
           }
       }
        FileManager fm = new FileManager();
        Order updateOrder = fm.getOrderByOrderId(orderId);
        
        updateOrder.set2ndDiningOption(Order.DiningOption.DINE_IN);
        
        // Write the updated orders back to the "orders.txt" file
        List<Order> allOrders = fm.readOrders();
        for (Order order : allOrders) {
            if (order.getOrderId().equals(updateOrder.getOrderId())) {
                order.set2ndDiningOption(Order.DiningOption.DINE_IN);
            }
        }
        fm.writeOrders(allOrders, false); // Overwrite the file

        // Create notifications for both vendor and customer
        String notificationMsg = "Order " + orderId + " dining option has been changed to" + Order.DiningOption.DINE_IN.toString().toLowerCase() + ".";
        String customerId = updateOrder.getCustomerId();

        Notification customerNotification = new Notification(
                Controller.generateNotificationId(customerId),
                customerId,
                notificationMsg,
                LocalDateTime.now(),
                null // You can set the transaction to null for customer notification
        );

        String vendorId = updateOrder.getVendorId();
        Notification vendorNotification = new Notification(
                Controller.generateNotificationId(vendorId),
                vendorId,
                notificationMsg,
                LocalDateTime.now(),
                null // You can set the transaction to null for vendor notification
        );

        fm.writeNotification(customerNotification, true);
        fm.writeNotification(vendorNotification, true);
        
        JOptionPane.showMessageDialog(this, "Order dining has been changed to dine in.");

        customer.setOrderHistory(fm.getOrdersForCustomer(customerId));
        updateDiningOption.setVisible(false);
        dineInButton.setVisible(false);
        takeawayButton.setVisible(false);
        
        notificationsTable.clearSelection();
    }//GEN-LAST:event_dineInButtonActionPerformed

    private void takeawayButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_takeawayButtonActionPerformed
  // Find the start index of the orderId
        String message = messageArea.getText();
        int startIndex = message.indexOf("Order ") + "Order ".length();

        // Find the end index of the orderId
        int endIndex = message.indexOf(" cannot be delivered");

        // Extract the orderId
        String orderId = message.substring(startIndex, endIndex);

        FileManager fm = new FileManager();
        Order updateOrder = fm.getOrderByOrderId(orderId);
        
        updateOrder.set2ndDiningOption(Order.DiningOption.TAKEAWAY);
        
// Write the updated orders back to the "orders.txt" file
        List<Order> allOrders = fm.readOrders();
        for (Order order : allOrders) {
            if (order.getOrderId().equals(updateOrder.getOrderId())) {
                order.set2ndDiningOption(Order.DiningOption.TAKEAWAY);
            }
        }
        fm.writeOrders(allOrders, false); // Overwrite the file

        // Create notifications for both vendor and customer
        String notificationMsg = "Order " + orderId + " dining option has been changed to" + Order.DiningOption.TAKEAWAY.toString().toLowerCase() + ".";
        String customerId = updateOrder.getCustomerId();

        Notification customerNotification = new Notification(
                Controller.generateNotificationId(customerId),
                customerId,
                notificationMsg,
                LocalDateTime.now(),
                null // You can set the transaction to null for customer notification
        );

        String vendorId = updateOrder.getVendorId();
        Notification vendorNotification = new Notification(
                Controller.generateNotificationId(vendorId),
                vendorId,
                notificationMsg,
                LocalDateTime.now(),
                null // You can set the transaction to null for vendor notification
        );

        fm.writeNotification(customerNotification, true);
        fm.writeNotification(vendorNotification, true);
        
        JOptionPane.showMessageDialog(this, "Order dining has been changed to takeaway.");
        
        updateDiningOption.setVisible(false);
        dineInButton.setVisible(false);
        takeawayButton.setVisible(false);
        
        notificationsTable.clearSelection();

    }//GEN-LAST:event_takeawayButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Notification_Dashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Notification_Dashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Notification_Dashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Notification_Dashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Notification_Dashboard().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backButton;
    private javax.swing.JTextField dateField;
    private javax.swing.JButton dineInButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea messageArea;
    private javax.swing.JTable notificationsTable;
    private javax.swing.JButton takeawayButton;
    private javax.swing.JTextField timeField;
    private javax.swing.JTextField transactionIdField;
    private javax.swing.JLabel updateDiningOption;
    // End of variables declaration//GEN-END:variables
}
