
package javaApplication4;

import classes.Customer;
import classes.*;
import java.io.*;
import java.util.*;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.SpinnerNumberModel;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author User
 */
public class Customer_OrderPage extends javax.swing.JFrame {

    /**
     * Creates new form Menu
     */
    private Customer customer;
    private FileManager fm;
    
    public Customer_OrderPage() {
        initComponents();
        this.fm = new FileManager();
    }
    
    public Customer_OrderPage(Customer customer) {
        
        initComponents();
        this.customer = customer;
        
        this.fm = new FileManager();
               
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        currentOrdersTable = new javax.swing.JTable();
        jPanel9 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane8 = new javax.swing.JScrollPane();
        completedOrdersTable = new javax.swing.JTable();
        jPanel6 = new javax.swing.JPanel();
        orderIdField2 = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        reviewArea = new javax.swing.JTextArea();
        ratingComboBox = new javax.swing.JComboBox<>();
        jLabel13 = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        cancelledOrdersTable = new javax.swing.JTable();
        cancelButton = new javax.swing.JButton();
        orderIdField = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        BACK = new javax.swing.JButton();
        jPanel8 = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        delReviewArea = new javax.swing.JTextArea();
        delRatingComboBox = new javax.swing.JComboBox<>();
        jLabel17 = new javax.swing.JLabel();
        feedbackButton = new javax.swing.JButton();
        reorderButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/menu (1).png"))); // NOI18N
        jLabel2.setText("Orders Page");

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Current Orders", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 3, 18))); // NOI18N
        jPanel2.setOpaque(false);

        jLabel3.setFont(new java.awt.Font("Segoe UI Semibold", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 153, 0));

        currentOrdersTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Date", "Time", "Order ID", "Items", "Total Price", "Order Status", "Delivery Status", "Classroom"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.String.class, java.lang.Object.class, java.lang.Double.class, java.lang.Object.class, java.lang.Object.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        currentOrdersTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                currentOrdersTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(currentOrdersTable);
        if (currentOrdersTable.getColumnModel().getColumnCount() > 0) {
            currentOrdersTable.getColumnModel().getColumn(0).setHeaderValue("Date");
            currentOrdersTable.getColumnModel().getColumn(1).setHeaderValue("Time");
            currentOrdersTable.getColumnModel().getColumn(2).setHeaderValue("Order ID");
            currentOrdersTable.getColumnModel().getColumn(3).setHeaderValue("Items");
            currentOrdersTable.getColumnModel().getColumn(4).setHeaderValue("Total Price");
            currentOrdersTable.getColumnModel().getColumn(5).setHeaderValue("Order Status");
            currentOrdersTable.getColumnModel().getColumn(6).setHeaderValue("Delivery Status");
            currentOrdersTable.getColumnModel().getColumn(7).setHeaderValue("Classroom");
        }

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel9.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Completed Order", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 3, 18))); // NOI18N
        jPanel9.setOpaque(false);

        jLabel9.setFont(new java.awt.Font("Segoe UI Semibold", 1, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 153, 0));

        completedOrdersTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Date", "Time", "Order ID", "Items", "Total Price", "Order Status", "Delivery Status", "Classroom"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.String.class, java.lang.Object.class, java.lang.Double.class, java.lang.Object.class, java.lang.Object.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        completedOrdersTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                completedOrdersTableMouseClicked(evt);
            }
        });
        jScrollPane8.setViewportView(completedOrdersTable);

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane8)
                .addContainerGap())
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap(9, Short.MAX_VALUE)
                .addComponent(jLabel9)
                .addGap(192, 192, 192))
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        orderIdField2.setEnabled(false);
        orderIdField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                orderIdField2ActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Segoe UI Semibold", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 153, 0));
        jLabel7.setText("Order ID:");

        jLabel10.setFont(new java.awt.Font("Segoe UI Semibold", 1, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 153, 0));
        jLabel10.setText("Ratings: ");

        jLabel12.setFont(new java.awt.Font("Segoe UI Semibold", 1, 14)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 153, 0));
        jLabel12.setText("Review:");

        reviewArea.setColumns(20);
        reviewArea.setRows(5);
        reviewArea.setEnabled(false);
        jScrollPane2.setViewportView(reviewArea);

        ratingComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "N/A", "1", "2", "3", "4", "5" }));
        ratingComboBox.setEnabled(false);

        jLabel13.setFont(new java.awt.Font("Segoe UI Semibold", 1, 18)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 102, 0));
        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel13.setText("Order Feedback");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel13)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                        .addGap(0, 12, Short.MAX_VALUE)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(orderIdField2, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel12)
                                    .addComponent(jLabel10))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ratingComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(29, 29, 29))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel13)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(orderIdField2, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(ratingComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel12)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Cancelled Order", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 3, 18))); // NOI18N
        jPanel7.setOpaque(false);

        jLabel8.setFont(new java.awt.Font("Segoe UI Semibold", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 153, 0));

        cancelledOrdersTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Date", "Time", "Order ID", "Items", "Total Price", "Order Status", "Delivery Status", "Classroom"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.String.class, java.lang.Object.class, java.lang.Double.class, java.lang.Object.class, java.lang.Object.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane5.setViewportView(cancelledOrdersTable);

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 898, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel8)
                .addGap(192, 192, 192))
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        cancelButton.setFont(new java.awt.Font("Segoe UI", 3, 18)); // NOI18N
        cancelButton.setText("CANCEL");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        orderIdField.setEnabled(false);
        orderIdField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                orderIdFieldActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Segoe UI Semibold", 1, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 153, 0));
        jLabel11.setText("Order ID: ");

        BACK.setBackground(new java.awt.Color(255, 153, 0));
        BACK.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        BACK.setForeground(new java.awt.Color(0, 48, 73));
        BACK.setText("BACK");
        BACK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BACKActionPerformed(evt);
            }
        });

        jLabel15.setFont(new java.awt.Font("Segoe UI Semibold", 1, 14)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 153, 0));
        jLabel15.setText("Ratings: ");

        jLabel16.setFont(new java.awt.Font("Segoe UI Semibold", 1, 14)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(255, 153, 0));
        jLabel16.setText("Review:");

        delReviewArea.setColumns(20);
        delReviewArea.setRows(5);
        delReviewArea.setEnabled(false);
        jScrollPane3.setViewportView(delReviewArea);

        delRatingComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "N/A", "1", "2", "3", "4", "5" }));
        delRatingComboBox.setEnabled(false);

        jLabel17.setFont(new java.awt.Font("Segoe UI Semibold", 1, 18)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(255, 102, 0));
        jLabel17.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel17.setText("Delivery Feedback");

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(0, 4, Short.MAX_VALUE)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel16)
                                    .addComponent(jLabel15))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(delRatingComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(29, 29, 29))
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jLabel17)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel17)
                .addGap(58, 58, 58)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(delRatingComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel16)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        feedbackButton.setBackground(new java.awt.Color(255, 153, 0));
        feedbackButton.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        feedbackButton.setText("FEEDBACK");
        feedbackButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                feedbackButtonActionPerformed(evt);
            }
        });

        reorderButton1.setBackground(new java.awt.Color(255, 153, 0));
        reorderButton1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        reorderButton1.setText("REORDER");
        reorderButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reorderButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(54, 54, 54)
                                .addComponent(cancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jLabel11)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(orderIdField, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 24, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(reorderButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(feedbackButton, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(121, 121, 121)))))
                        .addContainerGap(12, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(BACK, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(37, 37, 37))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BACK, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(36, 36, 36)
                        .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 70, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(orderIdField, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(cancelButton)
                        .addGap(104, 104, 104)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(feedbackButton)
                        .addGap(18, 18, 18)
                        .addComponent(reorderButton1)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(7, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    
   
    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        feedbackButton.setVisible(false);
        List<Order> customerOrders = customer.getOrderHistory();
        Controller controller = new Controller();
        
        List<Order.OrderStatus> currentOrderOrderStatuses = new ArrayList();
        currentOrderOrderStatuses.add(Order.OrderStatus.PENDING);
        currentOrderOrderStatuses.add(Order.OrderStatus.ACCEPTED);
        DefaultTableModel model = controller.populateCustomerOrderTableModel(customer, currentOrderOrderStatuses);
        currentOrdersTable.setModel(model);
        
        completedOrdersTable.setModel(controller.populateCustomerOrderTableModel(customer, Order.OrderStatus.COMPLETED));
        cancelledOrdersTable.setModel(controller.populateCustomerOrderTableModel(customer, Order.OrderStatus.CANCELLED));
    }//GEN-LAST:event_formWindowOpened
    
    
    
    private void orderIdField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_orderIdField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_orderIdField2ActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        // TODO add your handling code here:
        String orderId = orderIdField.getText();
        if (orderId.isEmpty()){
            JOptionPane.showMessageDialog(this, "Please select and order to cancel.");
        }else{
            customer.cancelOrder(orderId);
            JOptionPane.showMessageDialog(this, "Successfully cancelled order.");
            
            Controller controller = new Controller();

            List<Order.OrderStatus> currentOrderOrderStatuses = new ArrayList();
            currentOrderOrderStatuses.add(Order.OrderStatus.PENDING);
            currentOrderOrderStatuses.add(Order.OrderStatus.ACCEPTED);
            DefaultTableModel model = controller.populateCustomerOrderTableModel(customer, currentOrderOrderStatuses);
            currentOrdersTable.setModel(model);

            completedOrdersTable.setModel(controller.populateCustomerOrderTableModel(customer, Order.OrderStatus.COMPLETED));
            cancelledOrdersTable.setModel(controller.populateCustomerOrderTableModel(customer, Order.OrderStatus.CANCELLED));
            
            orderIdField.setText("");

        }
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void feedbackButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_feedbackButtonActionPerformed
        // TODO add your handling code here:
        Order selectedOrder = fm.getOrderByOrderId(orderIdField2.getText());
        
        int rating;
        String review;
        int delrating = 0;
        String delreview = null;
        if((ratingComboBox.getSelectedItem()=="N/A")&&("-".equals(reviewArea.getText()))&&(ratingComboBox.getSelectedItem()=="N/A")&&("-".equals(reviewArea.getText()))){
            JOptionPane.showMessageDialog(this, "Please give a feedback.");

        }else{
            if(ratingComboBox.getSelectedItem()!="N/A"){
                rating = Integer.parseInt((String) ratingComboBox.getSelectedItem());
            }else{
                JOptionPane.showMessageDialog(this, "Please give the order a rating.");
                return;
            }
            if(reviewArea.getText() == null ||"-".equals(reviewArea.getText())){
                JOptionPane.showMessageDialog(this, "Please write the order a review.");
                return;
            }else{
                review = reviewArea.getText();
            }
            
            
//            only allow customer to rate and review delivery if they chose delivery option
            if(selectedOrder.getDiningOption()!=Order.DiningOption.DELIVERY){

            }else{
                if(delRatingComboBox.getSelectedItem()!="N/A"){
                    delrating = Integer.parseInt((String) delRatingComboBox.getSelectedItem());
                }else{
                    JOptionPane.showMessageDialog(this, "Please give the delivery a rating.");
                    return;
                }                      
                if(delReviewArea.getText() == null ||"-".equals(delReviewArea.getText())){
                    JOptionPane.showMessageDialog(this, "Please write the delivery a review.");
                    return;
                }else{
                    delreview = delReviewArea.getText();
                }
            }
            
            customer.rateAndReviewOrder(selectedOrder, rating, review, delrating, delreview);
            orderIdField2.setText("");
            ratingComboBox.setSelectedItem("N/A");
            reviewArea.setText("-");
            delRatingComboBox.setSelectedItem("N/A");
            delReviewArea.setText("-");
            ratingComboBox.setEnabled(false);
            reviewArea.setEnabled(false);
            delRatingComboBox.setEnabled(false);
            delReviewArea.setEnabled(false);
            feedbackButton.setVisible(false);
            completedOrdersTable.clearSelection();
        }                                             

    }//GEN-LAST:event_feedbackButtonActionPerformed

    private void orderIdFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_orderIdFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_orderIdFieldActionPerformed

    private void currentOrdersTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_currentOrdersTableMouseClicked
        // TODO add your handling code here:
        //set data to textfield
        DefaultTableModel model = (DefaultTableModel) currentOrdersTable.getModel();
        int index = currentOrdersTable.getSelectedRow();

        String orderID = (String) model.getValueAt(index, 2);
        orderIdField.setText(orderID);
        
    }//GEN-LAST:event_currentOrdersTableMouseClicked

    private void BACKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BACKActionPerformed
        // TODO add your handling code here:
        this.dispose();
        new Customer_Dashboard(customer).setVisible(true);
        
    }//GEN-LAST:event_BACKActionPerformed

    private void reorderButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reorderButton1ActionPerformed
        // TODO add your handling code here:
        Order selectedOrder = fm.getOrderByOrderId(orderIdField2.getText());
               
        
        // Show dining option dialog
        String[] options = {"DINE_IN", "TAKEAWAY", "DELIVERY"};
        int choice = JOptionPane.showOptionDialog(
            null,
            "Select a dining option:",
            "Dining Option",
            JOptionPane.DEFAULT_OPTION,
            JOptionPane.PLAIN_MESSAGE,
            null,
            options,
            options[0]
        );
        
        Order.DiningOption selectedDiningOption;
        String classroomForDelivery = null;

        if (choice >= 0) {
            String selectedOption = options[choice];
            if (selectedOption.equals("DELIVERY")) {
                // If DELIVERY is selected, ask for the classroom
                classroomForDelivery = JOptionPane.showInputDialog(
                    null,
                    "Enter the classroom:",
                    "Classroom Input",
                    JOptionPane.PLAIN_MESSAGE
                );
                if (classroomForDelivery == null || classroomForDelivery.isEmpty()) {
                    // Handle if no classroom is entered for DELIVERY
                    JOptionPane.showMessageDialog(
                        null,
                        "Classroom is required for DELIVERY.",
                        "Error",
                        JOptionPane.ERROR_MESSAGE
                    );
                    return; // Exit the method without placing the order
                }
            }
            selectedDiningOption = Order.DiningOption.valueOf(selectedOption);
        } else {
            // Handle if no option is selected
            JOptionPane.showMessageDialog(
                null,
                "No option selected.",
                "Error",
                JOptionPane.ERROR_MESSAGE
            );
            return; // Exit the method without placing the order
        }
        try{

            Order newOrder = new Order(Controller.generateOrderId(customer.getUserId()), customer.getUserId(), selectedOrder.getVendorId(), selectedOrder.getMenuItems(), selectedDiningOption,classroomForDelivery);

            double customerBalance = customer.getWallet().getBalance();
            double amountPayable = newOrder.getTotalAmount();

            if (customerBalance < amountPayable){
                JOptionPane.showMessageDialog(this, "Insufficient Balance\n\nCurrent Balance: " + customerBalance + "\nAmount Payable: " + amountPayable);
            }else{
                customer.reorder(selectedOrder,selectedDiningOption,classroomForDelivery);
                JOptionPane.showMessageDialog(this, "Payment Successful\n\nWallet Balance: " + customerBalance + "\nAmount Payable: " + amountPayable + "\nCurrent Balance: " + customer.getWallet().getBalance());
            }
        
        }catch(Exception e){
            JOptionPane.showMessageDialog(this, "Something went wrong.");
            System.out.print(e);
            return;
        }

            

    }//GEN-LAST:event_reorderButton1ActionPerformed

    private void completedOrdersTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_completedOrdersTableMouseClicked
        DefaultTableModel model = (DefaultTableModel) completedOrdersTable.getModel();
        int index = completedOrdersTable.getSelectedRow();

        String orderID = (String) model.getValueAt(index, 2);

        orderIdField2.setText(orderID);
        String orderId = orderIdField2.getText();
        Order selectedOrder = fm.getOrderByOrderId(orderId);

        int rating = selectedOrder.getRating();
        String review = selectedOrder.getReview();
        int delrating = selectedOrder.getDeliveryRating();
        String delreview = selectedOrder.getDeliveryReview();

        if (selectedOrder.getDiningOption() != Order.DiningOption.DELIVERY) {
            // The dining option is not DELIVERY, so disable rating and review fields for delivery
            delRatingComboBox.setSelectedItem("N/A");
            delReviewArea.setText("-");
            delRatingComboBox.setEnabled(false);
            delReviewArea.setEnabled(false);
        } else {
            // The dining option is DELIVERY, so enable rating and review fields for delivery
            delRatingComboBox.setEnabled(true);
            delReviewArea.setEnabled(true);

            if (delrating == 0 && "null".equals(delreview)) {
                delRatingComboBox.setSelectedItem("N/A");
                delReviewArea.setText("-");
                delRatingComboBox.setEnabled(true);
                delReviewArea.setEnabled(true);
            }else{
                switch (delrating) {
                    case 0:
                        ratingComboBox.setSelectedItem("N/A");
                        break;
                    case 1:
                        ratingComboBox.setSelectedItem("1");
                        break;
                    case 2:
                        ratingComboBox.setSelectedItem("2");
                        break;
                    case 3:
                        ratingComboBox.setSelectedItem("3");
                        break;
                    case 4:
                        ratingComboBox.setSelectedItem("4");
                        break;
                    case 5:
                        ratingComboBox.setSelectedItem("5");
                        break;
                    default:
                        // Handle other cases here
                        break;
                }

                delReviewArea.setText(selectedOrder.getDeliveryReview());
            }
        }

        if (rating == 0 && "null".equals(review)) {
            ratingComboBox.setSelectedItem("N/A");
            reviewArea.setText("-");
            ratingComboBox.setEnabled(true);
            reviewArea.setEnabled(true);
            feedbackButton.setVisible(true);
        } else {
            // Handle other cases for ratings and reviews here
            switch (rating) {
                case 0:
                    ratingComboBox.setSelectedItem("N/A");
                    break;
                case 1:
                    ratingComboBox.setSelectedItem("1");
                    break;
                case 2:
                    ratingComboBox.setSelectedItem("2");
                    break;
                case 3:
                    ratingComboBox.setSelectedItem("3");
                    break;
                case 4:
                    ratingComboBox.setSelectedItem("4");
                    break;
                case 5:
                    ratingComboBox.setSelectedItem("5");
                    break;
                default:
                    // Handle other cases here
                    break;
            }

            reviewArea.setText(selectedOrder.getReview());
        }

        
    }//GEN-LAST:event_completedOrdersTableMouseClicked
    
    
//    
    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Customer_OrderPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Customer_OrderPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Customer_OrderPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Customer_OrderPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Customer_OrderPage().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BACK;
    private javax.swing.JButton cancelButton;
    private javax.swing.JTable cancelledOrdersTable;
    private javax.swing.JTable completedOrdersTable;
    private javax.swing.JTable currentOrdersTable;
    private javax.swing.JComboBox<String> delRatingComboBox;
    private javax.swing.JTextArea delReviewArea;
    private javax.swing.JButton feedbackButton;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JTextField orderIdField;
    private javax.swing.JTextField orderIdField2;
    private javax.swing.JComboBox<String> ratingComboBox;
    private javax.swing.JButton reorderButton1;
    private javax.swing.JTextArea reviewArea;
    // End of variables declaration//GEN-END:variables
}
